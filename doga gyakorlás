0 ás megallo
x=int(input("Adj meg egy számot!"))
y=x
while x!=0:
    if x>y:
        y=x
    x=int(input("Adj meg egy számot!"))
print("A legnagyobb szám: %d"%y)





egymás mellett:
import random
rand=[]
result=[]
result2=[]
szamlalo=0
for j in range(1,100):
    rand.append(random.randint(50,99))
for j in range(0,98):
    str1=str(rand[j])
    str2=str(rand[j+1])
    for k in str1:
        result.append((k))
    for k in str2:
         result2.append((k))
    if result[0]==result2[0]:
        szamlalo+=1
    result.clear()
    result2.clear()
print("%d esetben fordul elő egymás mellett olyan szám, amelyeknek az első számjegye azonos." %szamlalo)
    
    
10 es


x=int(input())

if x<10:
    print("a megadott számod kisebb mint tiz")
elif x>10:
    print("a megadott számod nagyobb mint tiz")
else:
    print("a megadott számod pontosan tiz")
    

vissza fele 10-1

x=11
for i in range(1,11):
    x=x-1
    print( "%d" %x, end=",")












Doga házik:


első:

auto=[]

for i in range(11):
    auto.append(str(input("Adj meg egy kocsi márkát:  ")))
    
print(auto)


print("A megadott autók felcsrélve és a hatodik elem Győzelemre Átírva:")

auto.reverse()

auto.pop(5)
auto.insert(5,"Győzelem")

print(auto)

3. feladat kész


lista=[1,2,3,4,5]

hatvanyok=[[],[],[],[],[]]



for i in range(1):
    hatvanyok[0].append(lista[0]**i)

for i in range(1,3):
    hatvanyok[1].append(lista[1]**i)

for i in range(1,4):
    hatvanyok[2].append(lista[2]**i)

for i in range(1,5):
    hatvanyok[3].append(lista[3]**i)

for i in range(1,6):
    hatvanyok[4].append(lista[4]**i)

print(hatvanyok)




4. feladat nincs kész:


import random
t=[random.randint(1,50)]
for i in range(100):
    t.append(random.randint(1,50))
print(t)

duplak=[]

for l in t:
    if l in t:
        duplak.append(l)
        
        
print(duplak)



5. feladat Kész


lista = [3,4,0,0,0,6,2,0,6,7,6,0,0,0,9,10,7,4,4,5,3,0,0,2,9,7,1]

for i in lista:
    if i==0:
        lista.remove(i)
        lista.append(i)
        
        
print(lista)



2es feladat kész

lista=['p','q']
szamok=['1','2','3','4','5','6','7','8','9','10']

eredmeny=[lista[i]+szamok[j]for j in range(len(szamok)) for i in range(len(lista))]


print(eredmeny)





tic tac toe--------------------------------------------------------------


tabla = ["-", "-", "-",
         "-", "-", "-",
         "-", "-", "-"]


jatekfut = True


gyoztes = None


kjatekos = "X"





def amoba():


  tablam()


  while jatekfut:
    lepes(kjatekos)

   
    futajatek()

    
    jatekoscsere()
  
  
  if gyoztes == "X" or gyoztes == "O":
    print(gyoztes + " A nyertes ")
  elif gyoztes == None:
    print("Döntetlen!")



def tablam():
  print("\n")
  print(tabla[0] + " , " + tabla[1] + " , " + tabla[2] + "     1 , 2 , 3")
  print(tabla[3] + " , " + tabla[4] + " , " + tabla[5] + "     4 , 5 , 6")
  print(tabla[6] + " , " + tabla[7] + " , " + tabla[8] + "     7 , 8 , 9")
  print("\n")



def lepes(jatekos):

  
  print(jatekos + "jön")
  position = input("Choose a position from 1-9: ")
  

  joinput = False
  while not joinput:

    
    while hely not in ["1", "2", "3", "4", "5", "6", "7", "8", "9"]:
      hely = input("A számok amik közül válaszhatsz: 1-9: ")
 
   
    hely = int(hely) - 1

    
    if tabla[hely] == "-":
      joinput = True
    else:
      print("Ez a pozicio már volt válassz újat")

  
  tabla[hely] = jatekos

  
  tablam()



def futajatek():
  vgyoztes()
  vdontetlen()



def vgyoztes():
  
  global gyoztes
  
  sorok = ksorok()
  oszlopok = koszlopok()
  atlo = katlo()
 
  if sorok:
    gyoztes = sorok
  elif oszlopok:
    gyoztes = oszlopok
  elif atlo:
    gyoztes = atlo
  else:
    gyoztes = None



def ksorok():
  
  global futajatek
  
  sor1 = tabla[0] == tabla[1] == tabla[2] != "-"
  sor2 = tabla[3] == tabla[4] == tabla[5] != "-"
  sor3 = tabla[6] == tabla[7] == tabla[8] != "-"
  
  if sor1 or sor2 or sor3:
    futajatek = False
  r
  if sor1:
    return tabla[0] 
  elif sor2:
    return tabla[3] 
  elif sor3:
    return tabla[6] 
  
  else:
    return None



def koszlopok():
  
  global futajatek
  
  oszlop1 = tabla[0] == tabla[3] == tabla[6] != "-"
  oszlop2 = tabla[1] == tabla[4] == tabla[7] != "-"
  oszlop3 = tabla[2] == tabla[5] == tabla[8] != "-"
  
  if oszlop1 or oszlop2 or oszlop3:
    jatekfut = False
  
  if oszlop1:
    return tabla[0] 
  elif oszlop2:
    return tabla[1] 
  elif oszlop3:
    return tabla[2] 
 
  else:
    return None



def katlo():
  
  global futajatek
  
  atlo1 = tabla[0] == tabla[4] == tabla[8] != "-"
  atlo2 = tabla[2] == tabla[4] == tabla[6] != "-"
  
  if atlo1 or atlo2:
    futajatek = False
  
  if atlo1:
    return tabla[0] 
  elif atlo2:
    return tabla[2]
 
  else:
    return None



def vdontetlen():
  
  global futajatek
  
  if "-" not in tabla:
    futajatek = False
    return True
  
  else:
    return False



def jatekoscsere():
  
  global kjatekos
  
  if kjatekos == "X":
    kjatekos = "O"
  
  elif kjatekos == "O":
    kjatekos = "X"


amoba()


------------------------------------------------------------------------------------------------------
